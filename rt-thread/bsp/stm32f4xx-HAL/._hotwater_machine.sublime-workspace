{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": "applications/WaterControl_thread.c",
			"settings":
			{
				"buffer_size": 2201,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "#include \"androidCmdHandle_thread.h\"\n#include \"user_def.h\"\n#include <board.h>\n#include <rtdevice.h>\n#include \"pthread.h\"\n\n#define DEBUG(...)  rt_kprintf(__VA_ARGS__)\nstatic rt_device_t uart_dev;\nThreadDef_Init(AndroidCmdHandlel_class);\n\nstatic uint16_t crc16_calculate(const uint8_t *data, uint16_t length);\nstatic int stream_data_handle(unsigned char *pdata);\nstatic void start(void *arg);\nstatic void *run(void *arg);\n/**/\nstatic pthread_t tid;\n\nstatic void open_uart()\n{\n\tstruct serial_configure cfg={\n\t\t.baud_rate = 115200,\n\t\t.data_bits = DATA_BITS_8,\n\t\t.stop_bits = UART_STOPBITS_1,\n\t\t.parity = PARITY_NONE,\n\n\t};\n\n\tuart_dev = (rt_device_t)rt_device_find(\"uart1\");\n\tif(uart_dev == NULL){\n\t\trt_kprintf(\"uart2 run failed! can't find %s device!\\n\", \"uart1\");\n\t}\n//\tres = rt_device_set_rx_indicate(uart_device, uart_intput);\n\tint res = rt_device_open(uart_dev, RT_DEVICE_OFLAG_RDWR | RT_DEVICE_FLAG_INT_RX );\n//\trt_event_init(&even t, \"event\", RT_IPC_FLAG_FIFO);\n\n\t((rt_serial_t *)uart_dev)->ops->configure((rt_serial_t *)uart_dev , &cfg);\n\t((rt_serial_t *)uart_dev)->ops->control((rt_serial_t *)uart_dev ,RT_DEVICE_CTRL_SET_INT, NULL);\n}\nstatic void init()\n{\n\n}\n\n\n\nstatic void *run(void *arg)\n{\n\tunsigned char buffer[20];\n\tunsigned int length;\n\tint ret;\n\tfor(;;){\n\t\tlength = rt_device_read(uart_dev, 0, buffer, sizeof(buffer));\n\t\tif(length>0){\n\t\t\tDEBUG(\"usart1 rx data length is %d data : %x %x\\n\", length, buffer[0], buffer[1]);\n\t\t\tret = stream_data_handle(buffer);\n\t\t\tif(ret<0){\n\t\t\t\tDEBUG(\"stream_data_handle return error %d\\n\", ret);\n\t\t\t}\t\t\t\n\t\t}\n\t\telse{\n\t\t\tmsleep(10);\n\t\t}\n\t}\n}\n\nstatic void start(void *arg)\n{\n\tpthread_attr_t attr;\n\tpthread_attr_init(&attr);\n\tstruct sched_param sched={sched_get_priority_max(SCHED_FIFO)-1};\n\tpthread_attr_setschedpolicy(&attr, SCHED_FIFO);\n\tpthread_attr_setschedparam(&attr, &sched);\n\tpthread_attr_setdetachstate(&attr, PTHREAD_CREATE_DETACHED);\n\topen_uart();\n\tpthread_create(&tid, NULL, run, arg);\n}\n\nstatic void ACK(unsigned char cmd)\n{\n\tunsigned char = data[]={0x7e, DIRDIRECTION_STC, CHANNEL_ONE, 0x01, 0x02,nz,0,0x7e};\n}\nstatic void send_heart_once(void)\n{\n\tunsigned char data[]={0x7e, DIRDIRECTION_STC, CHANNEL_ONE, 0x01, 0xff,0,0,0x7e};\n\tuint16_t crc = crc16_calculate(data, sizeof(data)-2);\n\tdata[sizeof(data)-2] = crc>>8;\n\tdata[sizeof(data)-1] = crc&0xff;\n}\n\nstatic void send_out_water()\n{\n\n\n}\n\nstatic void stop_out_water()\n{\n\tDEBUG(\"stop out water\\n\");\n}\n\nstatic void calibration()\n{\n\n}\n\nstatic void err_alarm()\n{\n\n\n}\n\nstatic void set_temp()\n{\n\n}\n\nstatic void set_time()\n{\n\n}\n\nstatic void set_poweroff_time()\n{\n\n}\n\nstatic void get_dev_info()\n{\n\n}\nstatic uint16_t crc16_calculate(const uint8_t *data, uint16_t length)\n{\n\tuint16_t crc, i;\n\tcrc = 0;\n\twhile (length--)\n\t{\n\t\tcrc = crc ^ (uint16_t) * data++ << 8;\n\t\tfor (i = 0; i < 8; i++)\n\t\t{\n\t\t\tif (crc & 0x8000)\n\t\t\t\tcrc = crc << 1 ^ 0x1021;\n\t\t\telse\n\t\t\t\tcrc = crc << 1;\n\t\t}\n\t}\n\treturn (crc & 0xFFFF);\n}\nstatic int data_hanlde(unsigned char *pdata)\n{\n\tDEBUG(\"first data is %x\\n\", *pdata);\n\tswitch(&pdata){\n\t\tcase 0x03:{stop_out_water();}break;\n\t}\n}\n/*\n\n\n*/\nstatic int stream_data_handle(unsigned char *pdata)\n{\n\tint ret = NO_ERR;\n\tunsigned char pck_length = 0;\n\tunsigned char data_length = 0;\n\tuint16_t crc_value;\n\tunsigned char length = *(pdata + 2);\n\tif (*pdata != DIRDIRECTION_CTS) {\n\t\tret = ERR_DIRDIRECTION;\n\t\tgoto end;\n\t}\n\tif ((*(pdata + 2) == CHANNEL_ONE) ||\n\t        (*(pdata + 2) == CHANNEL_ONE) ||\n\t        (*(pdata + 2) == CHANNEL_ONE)) {\n\n\t\tswitch (length) {\n\t\tcase CHANNEL_ONE: {\n\t\t\tdata_length = *(pdata + 3);\n\t\t} break;\n\t\tcase CHANNEL_TWO: {\n\t\t\tdata_length = *(pdata + 3) << 8 + *(pdata + 4);\n\t\t} break;\n\t\tcase CHANNEL_FOUR: {\n\t\t\tdata_length = *(pdata + 3) << 8 + *(pdata + 4) + *(pdata + 5) + *(pdata + 6);\n\t\t} break;\n\t\tdefault: break;\n\t\t}\n\n\t}\n\telse {\n\t\tret = ERR_CHANNEL;\n\t\tgoto end;\n\t}\n\tpck_length = 1 + 1 + data_length+length;\n\tcrc_value = crc16_calculate(pdata, pck_length);\n\tif(crc_value != *(uint16_t *)(pdata + pck_length-2))\n\t\tret = ERR_CRC;\n\telse{\n\t\tdata_hanlde(pdata+1 +1+1+data_length);\n\n\t}\nend:\n\treturn ret;\n}\n\n\n\n\n\n\n",
			"file": "applications/androidCmdHandle_thread.c",
			"file_size": 4119,
			"file_write_time": 132214490667220907,
			"settings":
			{
				"buffer_size": 4037,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "applications/androidCmdHandle_thread.h",
			"settings":
			{
				"buffer_size": 383,
				"line_ending": "Windows"
			}
		},
		{
			"file": "drivers/drv_usart.c",
			"settings":
			{
				"buffer_size": 13798,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/F/hotwater_machine/hotwater_machine/rt-thread/components/drivers/serial/serial.c",
			"settings":
			{
				"buffer_size": 36126,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/F/hotwater_machine/hotwater_machine/rt-thread/src/device.c",
			"settings":
			{
				"buffer_size": 12312,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/F/hotwater_machine/hotwater_machine/rt-thread/bsp/stm32/libraries/STM32F4xx_HAL/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c",
			"settings":
			{
				"buffer_size": 85496,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/F/hotwater_machine/hotwater_machine/rt-thread/components/drivers/include/drivers/adc.h",
			"settings":
			{
				"buffer_size": 1140,
				"line_ending": "Unix"
			}
		},
		{
			"file": "drivers/drv_adc.c",
			"settings":
			{
				"buffer_size": 6874,
				"line_ending": "Unix"
			}
		},
		{
			"file": "applications/gprs_thread.c",
			"settings":
			{
				"buffer_size": 2083,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/F/hotwater_machine/hotwater_machine/rt-thread/components/drivers/misc/adc.c",
			"settings":
			{
				"buffer_size": 8098,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 6674 files for \"ADC_DEV_CHANNEL\"\n\nF:\\hotwater_machine\\hotwater_machine\\rt-thread\\bsp\\stm32f4xx-HAL\\applications\\WaterControl_thread.c:\n   80  \t}\n   81  \trt_device_open(adc_dev, RT_DEVICE_FLAG_RDWR);\n   82: \trt_device_control(adc_dev, RT_ADC_CMD_ENABLE, (void*)ADC_DEV_CHANNEL);\n   83  //\trt_adc_enable(adc_dev, adc_channle);\n   84  \tint value = rt_adc_read(adc_dev, adc_channle);\n\n1 match in 1 file\n",
			"settings":
			{
				"buffer_size": 409,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/F/hotwater_machine/hotwater_machine/rt-thread",
		"/F/hotwater_machine/hotwater_machine/rt-thread/bsp",
		"/F/hotwater_machine/hotwater_machine/rt-thread/bsp/stm32f4xx-HAL",
		"/F/hotwater_machine/hotwater_machine/rt-thread/bsp/stm32f4xx-HAL/applications",
		"/F/hotwater_machine/hotwater_machine/rt-thread/bsp/stm32f4xx-HAL/drivers",
		"/F/hotwater_machine/hotwater_machine/rt-thread/components",
		"/F/hotwater_machine/hotwater_machine/rt-thread/components/drivers",
		"/F/hotwater_machine/hotwater_machine/rt-thread/components/drivers/misc"
	],
	"file_history":
	[
		"/F/hotwater_machine/hotwater_machine/rt-thread/include/rtdebug.h",
		"/F/hotwater_machine/hotwater_machine/rt-thread/include/rtthread.h",
		"/F/hotwater_machine/rt-thread/components/libc/pthreads/pthread.c",
		"/F/hotwater_machine/rt-thread/src/components.c",
		"/F/hotwater_machine/rt-thread/include/rtdebug.h",
		"/F/hotwater_machine/rt-thread/bsp/stm32/libraries/templates/stm32f4xx/rtconfig.h"
	],
	"find":
	{
		"height": 28.0
	},
	"find_in_files":
	{
		"height": 104.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"rt_adc_enable",
			"_adc_control",
			"LOG_TAG",
			"ADC_DEV_CHANNEL",
			"adc_channle"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "applications/WaterControl_thread.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2201,
						"regions":
						{
						},
						"selection":
						[
							[
								1290,
								1290
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 171.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "applications/androidCmdHandle_thread.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4037,
						"regions":
						{
						},
						"selection":
						[
							[
								2052,
								2052
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1140.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "applications/androidCmdHandle_thread.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 383,
						"regions":
						{
						},
						"selection":
						[
							[
								157,
								157
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "drivers/drv_usart.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13798,
						"regions":
						{
						},
						"selection":
						[
							[
								7140,
								7140
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3704.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/F/hotwater_machine/hotwater_machine/rt-thread/components/drivers/serial/serial.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 36126,
						"regions":
						{
						},
						"selection":
						[
							[
								31692,
								31692
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 22692.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/F/hotwater_machine/hotwater_machine/rt-thread/src/device.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12312,
						"regions":
						{
						},
						"selection":
						[
							[
								8894,
								8894
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6250.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "/F/hotwater_machine/hotwater_machine/rt-thread/bsp/stm32/libraries/STM32F4xx_HAL/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 85496,
						"regions":
						{
						},
						"selection":
						[
							[
								82080,
								82080
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 47564.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/F/hotwater_machine/hotwater_machine/rt-thread/components/drivers/include/drivers/adc.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1140,
						"regions":
						{
						},
						"selection":
						[
							[
								992,
								992
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 444.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "drivers/drv_adc.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6874,
						"regions":
						{
						},
						"selection":
						[
							[
								5349,
								5366
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4389.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "applications/gprs_thread.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2083,
						"regions":
						{
						},
						"selection":
						[
							[
								1636,
								1636
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/F/hotwater_machine/hotwater_machine/rt-thread/components/drivers/misc/adc.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8098,
						"regions":
						{
						},
						"selection":
						[
							[
								2455,
								2455
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1660.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 11,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 409,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										270,
										285
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/C++/C Single File.sublime-build",
	"project": "._hotwater_machine.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 301.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
